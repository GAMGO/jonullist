
--커밋
commit;
-- 각 테이블 조회
SELECT * FROM customers;
SELECT * FROM goal;
SELECT * FROM food_Info;
-- SQL 버전보기
SELECT * FROM V$VERSION;

-- 외래 키에 의해 종속된 테이블 먼저 삭제
DROP TABLE goal CASCADE CONSTRAINTS;
DROP TABLE body CASCADE CONSTRAINTS;
DROP TABLE RECORD CASCADE CONSTRAINTS;
DROP TABLE RECOVERY CASCADE CONSTRAINTS;

-- 마지막으로 customers 테이블 삭제
DROP TABLE customers CASCADE CONSTRAINTS;


--테이블 수정된걸로 수정
CREATE TABLE customers (
    idx NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    weight NUMBER(4, 1),
    age NUMBER(3),
    gender CHAR(1) CHECK (gender IN ('M', 'F')),
    height NUMBER(3)
);

CREATE TABLE goal (
    idx NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,
    target_weight NUMBER(4, 1) NOT NULL,
    target_calories NUMBER(5) NOT NULL,
    record_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(idx) ON DELETE CASCADE
);

-- GOAL 테이블에 record_date 컬럼 추가
ALTER TABLE goal ADD record_date DATE;

-- null 값이 들어가지 않도록 제약 조건 추가
ALTER TABLE goal MODIFY record_date DATE NOT NULL;

-- 커밋
COMMIT;

CREATE TABLE body (
    idx NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,
    target_weight NUMBER(4, 1),
    target_calories NUMBER(5),
    weight NUMBER(4, 1) NOT NULL,
    height NUMBER(3) NOT NULL,
    age NUMBER(3),
    gender CHAR(1),
    inbody NUMBER(5, 2),
    record_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(idx) ON DELETE CASCADE
);

CREATE TABLE food_Info (
    food_name VARCHAR2(100),
    calories NUMBER(5),
    count NUMBER(5)
);


CREATE TABLE RECORD (
    idx NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,
    record_date DATE NOT NULL,
    CALORIESM NUMBER(10),
    CALORIESL NUMBER(10),
    CALORIESD NUMBER(10),
    TARGET_WEIGHT NUMBER(4, 1),
    TARGET_CALORIES NUMBER(5),
    FOREIGN KEY (customer_id) REFERENCES customers(idx) ON DELETE CASCADE
);

CREATE TABLE recovery (
    idx           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,  -- customers.id (이메일)
    code          VARCHAR2(32)    NOT NULL,  -- enum: BIRTHPLACE / ELEMENTARY_SCHOOL / PET_NAME / MOTHER_NAME
    answer_hash   VARCHAR2(255)   NOT NULL,
    updated_at    TIMESTAMP       NOT NULL,
    CONSTRAINT uq_recovery_user_code UNIQUE (customer_id, code)
);

-- 필요 시 FK를 customers(id)에 연결 (고객 테이블 설계가 id UNIQUE 인 환경에서만 권장)
 ALTER TABLE recovery
   ADD CONSTRAINT fk_recovery_customer
   FOREIGN KEY (customer_id) REFERENCES customers(idx) ON DELETE CASCADE;